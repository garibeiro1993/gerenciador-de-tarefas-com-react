{"ast":null,"code":"var _jsxFileName = \"/home/gabriel/new_course_react/gerenciador-de-tarefas-com-react/src/cadastrar/cadastrar-tarefa.js\";\nimport React, { useState } from 'react';\nimport { Button, Form, Jumbotron, Modal } from 'react-bootstrap';\nimport { navigate, A } from 'hookrouter';\nimport Tarefa from '../models/tarefa.model';\n\nconst CadastrarTarefa = () => {\n  const [tarefa, setTarefa] = useState('');\n  const [formValidado, setFormValidado] = useState(false);\n  const [exibirModal, setExibirModal] = useState(false);\n\n  const cadastrar = event => {\n    event.preventDefault();\n    setFormValidado(true);\n\n    if (event.currentTarget.checkValidity() === true) {\n      // obtem as tarefas\n      const tarefasDb = localStorage['tarefas'];\n      const tarefas = tarefasDb ? JSON.parse(tarefasDb) : []; // persistir a tarefa\n\n      tarefas.push(new Tarefa(new Date().getTime(), tarefa, false));\n      localStorage['tarefas'] = JSON.stringify(tarefas);\n      setExibirModal(true);\n    }\n  };\n\n  const handleTxtTarefa = event => {\n    setTarefa(event.target.value);\n  };\n\n  const handleFecharModal = () => {\n    navigate('/');\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, \"Cadastrar\"), /*#__PURE__*/React.createElement(Jumbotron, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    validated: formValidado,\n    noValidate: true,\n    onSubmit: cadastrar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, \"Tarefa\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Digite a Tarefa\",\n    minLength: \"5\",\n    maxLength: \"100\",\n    required: true,\n    value: tarefa,\n    onChange: handleTxtTarefa,\n    \"data-testid\": \"txt-tarefa\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, \"A tarefa deve conter no minimo 5 Caracteres.\")), /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"success\",\n    type: \"submit\",\n    \"data-testid\": \"btn-cadastrar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, \"Cadastrar\"), \"\\xA0\", /*#__PURE__*/React.createElement(A, {\n    href: \"/\",\n    className: \"btn btn-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 25\n    }\n  }, \"Voltar\"))), /*#__PURE__*/React.createElement(Modal, {\n    show: exibirModal,\n    onHide: handleFecharModal,\n    \"data-testid\": \"modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, \"Sucesso\")), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, \"Tarefa adicionada com sucesso!\"), /*#__PURE__*/React.createElement(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"success\",\n    onClick: handleFecharModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, \"Continuar\")))));\n};\n\nexport default CadastrarTarefa;","map":{"version":3,"sources":["/home/gabriel/new_course_react/gerenciador-de-tarefas-com-react/src/cadastrar/cadastrar-tarefa.js"],"names":["React","useState","Button","Form","Jumbotron","Modal","navigate","A","Tarefa","CadastrarTarefa","tarefa","setTarefa","formValidado","setFormValidado","exibirModal","setExibirModal","cadastrar","event","preventDefault","currentTarget","checkValidity","tarefasDb","localStorage","tarefas","JSON","parse","push","Date","getTime","stringify","handleTxtTarefa","target","value","handleFecharModal"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { Button, Form, Jumbotron, Modal } from 'react-bootstrap'\nimport { navigate, A } from 'hookrouter'\nimport Tarefa from '../models/tarefa.model'\n\nconst CadastrarTarefa = () => {\n\n  const [tarefa, setTarefa] = useState('')\n  const [formValidado, setFormValidado] = useState(false)\n  const [exibirModal, setExibirModal] = useState(false)\n\n\n  const cadastrar = event => {\n    event.preventDefault()\n    setFormValidado(true)\n    if (event.currentTarget.checkValidity() === true) {\n      // obtem as tarefas\n      const tarefasDb = localStorage['tarefas']\n      const tarefas = tarefasDb ? JSON.parse(tarefasDb) : []\n      // persistir a tarefa\n      tarefas.push(new Tarefa(new Date().getTime(), tarefa, false))\n      localStorage['tarefas'] = JSON.stringify(tarefas)\n      setExibirModal(true)\n    }\n  }\n\n  const handleTxtTarefa = event => {\n    setTarefa(event.target.value)\n  }\n\n  const handleFecharModal = () => {\n    navigate('/')\n  }\n\n  return (\n    <div>\n      <h3 className='text-center'>Cadastrar</h3>\n      <Jumbotron>\n        <Form\n          validated={formValidado}\n          noValidate\n          onSubmit={cadastrar}>\n          <Form.Group>\n            <Form.Label>Tarefa</Form.Label>\n            <Form.Control\n              type='text'\n              placeholder='Digite a Tarefa'\n              minLength='5'\n              maxLength='100'\n              required\n              value={tarefa}\n              onChange={handleTxtTarefa}\n              data-testid='txt-tarefa' />\n            <Form.Control.Feedback type='invalid'>\n              A tarefa deve conter no minimo 5 Caracteres.\n                        </Form.Control.Feedback>\n          </Form.Group>\n          <Form.Group className='text-center'>\n            <Button\n              variant='success'\n              type='submit'\n              data-testid='btn-cadastrar'>  \n              Cadastrar\n                        </Button>\n                        &nbsp;\n                        <A href='/' className='btn btn-light'>Voltar</A>\n          </Form.Group>\n        </Form>\n        <Modal show={exibirModal} onHide={handleFecharModal} data-testid='modal'>\n          <Modal.Header closeButton>\n            <Modal.Title>Sucesso</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            Tarefa adicionada com sucesso!\n                   </Modal.Body>\n          <Modal.Footer>\n            <Button\n              variant='success'\n              onClick={handleFecharModal}>\n              Continuar\n                         </Button>\n          </Modal.Footer>\n        </Modal>\n      </Jumbotron>\n    </div>\n  );\n}\n\nexport default CadastrarTarefa;"]},"metadata":{},"sourceType":"module"}