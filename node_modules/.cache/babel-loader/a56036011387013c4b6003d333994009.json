{"ast":null,"code":"var _jsxFileName = \"/home/gabriel/new_course_react/gerenciador-de-tarefas-com-react/src/listar/listar-tarefas.js\";\nimport React, { useState, useEffect } from 'react';\nimport { A } from 'hookrouter';\nimport { Table, Form } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport ItensListaTarefas from './itens-lista-tarefas';\nimport Paginacao from './paginacao';\nimport Ordenacao from './ordenacao';\n\nconst ListarTarefas = () => {\n  const ITENS_POR_PAG = 3;\n  const [tarefas, setTarefas] = useState([]);\n  const [carregarTarefas, setCarregarTarefas] = useState(true);\n  const [totalItems, setTotalItems] = useState(0);\n  const [paginaAtual, setPaginalAtual] = useState(1);\n  const [ordenarAsc, setOrdenarAsc] = useState(false);\n  const [ordenarDesc, setOrdenarDesc] = useState(false);\n  const [filtroTarefa, setFiltroTarefa] = useState('');\n  useEffect(() => {\n    const obterTarefas = () => {\n      const tarefasDb = localStorage['tarefas'];\n      let listaTarefas = tarefasDb ? JSON.parse(tarefasDb) : []; // filtrar\n\n      listaTarefas = listaTarefas.filter(t => t.nome.toLowerCase().indexOf(filtroTarefa.toLowerCase()) === 0); //ordenar\n\n      if (ordenarAsc) {\n        listaTarefas.sort((t1, t2) => t1.nome.toLowerCase() > t2.nome.toLowerCase() ? 1 : -1);\n      } else if (ordenarDesc) {\n        listaTarefas.sort((t1, t2) => t1.nome.toLowerCase() < t2.nome.toLowerCase() ? 1 : -1);\n      } // paginar\n\n\n      setTotalItems(listaTarefas.length);\n      setTarefas(listaTarefas.splice((paginaAtual - 1) * ITENS_POR_PAG, ITENS_POR_PAG));\n    }; //se nao foi carregado \n\n\n    if (carregarTarefas) {\n      obterTarefas();\n      setCarregarTarefas(false);\n    }\n  }, [carregarTarefas, paginaAtual, ordenarDesc, ordenarAsc, filtroTarefa]);\n\n  const handleMudarPagina = pagina => {\n    setPaginalAtual(pagina);\n    setCarregarTarefas(true);\n  };\n\n  const handleOrdernar = event => {\n    event.preventDefault();\n\n    if (!ordenarAsc && !ordenarDesc) {\n      setOrdenarAsc(true);\n      setOrdenarDesc(false);\n    } else if (ordenarAsc) {\n      setOrdenarAsc(false);\n      setOrdenarDesc(true);\n    } else {\n      setOrdenarAsc(false);\n      setOrdenarDesc(false);\n    }\n\n    setCarregarTarefas(true);\n  };\n\n  const handleFiltrar = event => {\n    setFiltroTarefa(event.target.value);\n    setCarregarTarefas(true);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, \"Tarefas a fazer\"), /*#__PURE__*/React.createElement(Table, {\n    striped: true,\n    bordered: true,\n    hover: true,\n    responsive: true,\n    \"data-testid\": \"tabela\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"/\",\n    onClick: handleOrdernar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, \"Tarefa \\xA0\", /*#__PURE__*/React.createElement(Ordenacao, {\n    ordenarAsc: ordenarAsc,\n    ordenarDesc: ordenarDesc,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(A, {\n    href: \"/cadastrar\",\n    className: \"btn btn-success btn-sm\",\n    \"data-testeid\": \"btn-nova-tarefa\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faPlus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 19\n    }\n  }), \"\\xA0 Nova tarefa\"))), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    value: filtroTarefa,\n    onChange: handleFiltrar,\n    \"data-testid\": \"txt-tarefa\",\n    className: \"filtro-tarefa\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, \"\\xA0\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ItensListaTarefas, {\n    tarefas: tarefas,\n    recarregarTarefas: setCarregarTarefas,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Paginacao, {\n    totalItems: totalItems,\n    itemsPorPagina: ITENS_POR_PAG,\n    paginaAtual: paginaAtual,\n    mudarPagina: handleMudarPagina,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default ListarTarefas;","map":{"version":3,"sources":["/home/gabriel/new_course_react/gerenciador-de-tarefas-com-react/src/listar/listar-tarefas.js"],"names":["React","useState","useEffect","A","Table","Form","FontAwesomeIcon","faPlus","ItensListaTarefas","Paginacao","Ordenacao","ListarTarefas","ITENS_POR_PAG","tarefas","setTarefas","carregarTarefas","setCarregarTarefas","totalItems","setTotalItems","paginaAtual","setPaginalAtual","ordenarAsc","setOrdenarAsc","ordenarDesc","setOrdenarDesc","filtroTarefa","setFiltroTarefa","obterTarefas","tarefasDb","localStorage","listaTarefas","JSON","parse","filter","t","nome","toLowerCase","indexOf","sort","t1","t2","length","splice","handleMudarPagina","pagina","handleOrdernar","event","preventDefault","handleFiltrar","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { A } from 'hookrouter'\nimport { Table, Form } from 'react-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlus } from '@fortawesome/free-solid-svg-icons'\nimport ItensListaTarefas from './itens-lista-tarefas'\nimport Paginacao from './paginacao'\nimport Ordenacao from './ordenacao'\n\nconst ListarTarefas = () => {\n\n  const ITENS_POR_PAG = 3\n\nconst [tarefas, setTarefas] = useState([])\nconst [carregarTarefas, setCarregarTarefas] = useState(true)\nconst [totalItems, setTotalItems] = useState(0)\nconst [paginaAtual, setPaginalAtual] = useState(1)\nconst [ordenarAsc, setOrdenarAsc] = useState(false)\nconst [ordenarDesc, setOrdenarDesc] = useState(false)\nconst [filtroTarefa, setFiltroTarefa] = useState('')\n\nuseEffect(() => {\n  const obterTarefas = () => {\n    const tarefasDb = localStorage['tarefas']\n    let listaTarefas = tarefasDb ? JSON.parse(tarefasDb) : []\n    // filtrar\n    listaTarefas = listaTarefas.filter(\n      t => t.nome.toLowerCase().indexOf(filtroTarefa.toLowerCase()) === 0\n    )\n    //ordenar\n    if (ordenarAsc) {\n      listaTarefas.sort((t1, t2) => (t1.nome.toLowerCase() > t2.nome.toLowerCase()) ? 1 : -1 )\n    } else if (ordenarDesc) {\n      listaTarefas.sort((t1, t2) => (t1.nome.toLowerCase() < t2.nome.toLowerCase()) ? 1 : -1 )\n    }\n    // paginar\n    setTotalItems(listaTarefas.length)\n    setTarefas(listaTarefas.splice((paginaAtual -1) * ITENS_POR_PAG, ITENS_POR_PAG))\n  }\n\n //se nao foi carregado \n  if (carregarTarefas) { \n    obterTarefas()\n    setCarregarTarefas(false)\n   }\n}, [carregarTarefas, paginaAtual, ordenarDesc, ordenarAsc, filtroTarefa])\n\n\nconst handleMudarPagina = pagina => { \n  setPaginalAtual(pagina)\n  setCarregarTarefas(true)\n}\n\nconst handleOrdernar = event => {\n  event.preventDefault()\n  if (!ordenarAsc && !ordenarDesc) {\n    setOrdenarAsc(true)\n    setOrdenarDesc(false)\n  } else if (ordenarAsc) {\n    setOrdenarAsc(false)\n    setOrdenarDesc(true)\n  } else {\n    setOrdenarAsc(false)\n    setOrdenarDesc(false)\n  }\n  setCarregarTarefas(true)\n}\n\nconst handleFiltrar = event => {\n  setFiltroTarefa(event.target.value)\n  setCarregarTarefas(true)\n}\n\n  return (\n    <div className='text-center'>\n      <h3>Tarefas a fazer</h3>\n      <Table striped bordered hover responsive data-testid='tabela'>\n        <thead>\n          <tr>\n            <th>\n            <a href='/' onClick={handleOrdernar}>\n              Tarefa\n              &nbsp;\n              <Ordenacao\n                ordenarAsc={ordenarAsc}\n                ordenarDesc={ordenarDesc} />\n            </a>\n            </th>\n            <th>\n              <A href='/cadastrar'\n                className='btn btn-success btn-sm'\n                data-testeid='btn-nova-tarefa'>\n                  <FontAwesomeIcon icon={faPlus} />\n                  &nbsp;\n                  Nova tarefa\n                </A>\n            </th>\n          </tr>\n          <tr>\n            <th>\n              <Form.Control\n                type='text'\n                value={filtroTarefa}\n                onChange={handleFiltrar}\n                data-testid='txt-tarefa'\n                className='filtro-tarefa' />\n            </th>\n            <th>\n              &nbsp;\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          <ItensListaTarefas \n            tarefas={tarefas}\n            recarregarTarefas={setCarregarTarefas} />\n        </tbody>\n      </Table>\n      <Paginacao\n        totalItems={totalItems}\n        itemsPorPagina={ITENS_POR_PAG}\n        paginaAtual={paginaAtual}\n        mudarPagina={handleMudarPagina} />\n    </div>\n\t)\n}\n\nexport default ListarTarefas"]},"metadata":{},"sourceType":"module"}