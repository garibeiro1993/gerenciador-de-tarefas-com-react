{"ast":null,"code":"var _jsxFileName = \"/home/gabriel/new_course_react/gerenciador-de-tarefas-com-react/src/listar/remover-tarefa.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Modal, Button } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\n\nconst RemoverTarefas = props => {\n  const [exibirModal, setExibirModal] = useState(false);\n\n  const handleAbrirModal = event => {\n    event.preventDefault();\n    setExibirModal(true);\n  };\n\n  const handleFecharModal = () => setExibirModal(false);\n\n  const handleRemoverTarefa = event => {\n    event.preventDefault();\n    const tarefasDb = localStorage['tarefas'];\n    let tarefas = tarefasDb ? JSON.parse(tarefasDb) : [];\n    tarefas = tarefas.filter(tarefa => tarefa.id !== props.tarefa.id);\n    localStorage['tarefas'] = JSON.stringify(tarefas);\n    setExibirModal(false);\n    props.recarregarTarefas(true);\n  };\n\n  return /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"danger\",\n    className: \"btn-sm\",\n    onClick: handleAbrirModal,\n    \"data-testid\": \"btn-abrir-modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faTrashAlt,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Modal, {\n    show: exibirModal,\n    onHide: handleFecharModal,\n    \"data-testid\": \"modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, \"Remover tarefa\")), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, \"Deseja realmente remover a seguinte tarefa?\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, props.tarefa.nome)), /*#__PURE__*/React.createElement(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    onClick: handleRemoverTarefa,\n    \"data-testid\": \"btn-remover\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, \"Sim\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"light\",\n    onClick: handleFecharModal,\n    \"data-testid\": \"btn-fechar-modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, \"N\\xE3o\"))));\n};\n\nRemoverTarefas.propTypes = {\n  tarefa: PropTypes.object.isRequired,\n  recarregarTarefas: PropTypes.func.isRequired\n};\nexport default RemoverTarefas;","map":{"version":3,"sources":["/home/gabriel/new_course_react/gerenciador-de-tarefas-com-react/src/listar/remover-tarefa.js"],"names":["React","useState","PropTypes","Modal","Button","FontAwesomeIcon","faTrashAlt","RemoverTarefas","props","exibirModal","setExibirModal","handleAbrirModal","event","preventDefault","handleFecharModal","handleRemoverTarefa","tarefasDb","localStorage","tarefas","JSON","parse","filter","tarefa","id","stringify","recarregarTarefas","nome","propTypes","object","isRequired","func"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,iBAA9B;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,UAAT,QAA2B,mCAA3B;;AAEA,MAAMC,cAAc,GAAGC,KAAK,IAAI;AAE9B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,KAAD,CAA9C;;AAEA,QAAMU,gBAAgB,GAAGC,KAAK,IAAI;AAChCA,IAAAA,KAAK,CAACC,cAAN;AACAH,IAAAA,cAAc,CAAC,IAAD,CAAd;AAED,GAJD;;AAMA,QAAMI,iBAAiB,GAAG,MAAMJ,cAAc,CAAC,KAAD,CAA9C;;AAEA,QAAMK,mBAAmB,GAAGH,KAAK,IAAI;AACnCA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMG,SAAS,GAAGC,YAAY,CAAC,SAAD,CAA9B;AACA,QAAIC,OAAO,GAAGF,SAAS,GAAGG,IAAI,CAACC,KAAL,CAAWJ,SAAX,CAAH,GAA2B,EAAlD;AACAE,IAAAA,OAAO,GAAGA,OAAO,CAACG,MAAR,CAAeC,MAAM,IAAIA,MAAM,CAACC,EAAP,KAAcf,KAAK,CAACc,MAAN,CAAaC,EAApD,CAAV;AACAN,IAAAA,YAAY,CAAC,SAAD,CAAZ,GAA0BE,IAAI,CAACK,SAAL,CAAeN,OAAf,CAA1B;AACAR,IAAAA,cAAc,CAAC,KAAD,CAAd;AACAF,IAAAA,KAAK,CAACiB,iBAAN,CAAwB,IAAxB;AACD,GARD;;AAUA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,QAAhB;AACE,IAAA,SAAS,EAAC,QADZ;AAEE,IAAA,OAAO,EAAEd,gBAFX;AAGE,mBAAY,iBAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAEL,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF,eAOE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAEG,WAAb;AAA0B,IAAA,MAAM,EAAEK,iBAAlC;AACE,mBAAY,OADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,WAAW,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,CAFF,eAKE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iEAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASN,KAAK,CAACc,MAAN,CAAaI,IAAtB,CAHF,CALF,eAUE,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,SAAhB;AAA0B,IAAA,OAAO,EAAEX,mBAAnC;AACE,mBAAY,aADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,eAKE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,OAAhB;AAAwB,IAAA,OAAO,EAAED,iBAAjC;AACE,mBAAY,kBADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,CAVF,CAPF,CADF;AAgCD,CAtDD;;AAwDAP,cAAc,CAACoB,SAAf,GAA2B;AACzBL,EAAAA,MAAM,EAAEpB,SAAS,CAAC0B,MAAV,CAAiBC,UADA;AAEzBJ,EAAAA,iBAAiB,EAAEvB,SAAS,CAAC4B,IAAV,CAAeD;AAFT,CAA3B;AAKA,eAAetB,cAAf","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { Modal, Button } from 'react-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons'\n\nconst RemoverTarefas = props => {\n\n  const [exibirModal, setExibirModal] = useState(false)\n\n  const handleAbrirModal = event => {\n    event.preventDefault()\n    setExibirModal(true)\n\n  }\n\n  const handleFecharModal = () => setExibirModal(false)\n\n  const handleRemoverTarefa = event => {\n    event.preventDefault()\n    const tarefasDb = localStorage['tarefas']\n    let tarefas = tarefasDb ? JSON.parse(tarefasDb) : []\n    tarefas = tarefas.filter(tarefa => tarefa.id !== props.tarefa.id)\n    localStorage['tarefas'] = JSON.stringify(tarefas)\n    setExibirModal(false)\n    props.recarregarTarefas(true)\n  }\n\n  return (\n    <span>\n      <Button variant='danger'\n        className='btn-sm'\n        onClick={handleAbrirModal}\n        data-testid='btn-abrir-modal'>\n        <FontAwesomeIcon icon={faTrashAlt} />\n      </Button>\n      <Modal show={exibirModal} onHide={handleFecharModal}\n        data-testid='modal'>\n        <Modal.Header closeButton>\n          <Modal.Title>Remover tarefa</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          Deseja realmente remover a seguinte tarefa?\n            <br />\n          <strong>{props.tarefa.nome}</strong>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant='primary' onClick={handleRemoverTarefa}\n            data-testid='btn-remover'>\n            Sim\n            </Button>\n          <Button variant='light' onClick={handleFecharModal}\n            data-testid='btn-fechar-modal'>\n            NÃ£o\n              </Button>\n        </Modal.Footer>\n      </Modal>\n    </span>\n  )\n\n}\n\nRemoverTarefas.propTypes = {\n  tarefa: PropTypes.object.isRequired,\n  recarregarTarefas: PropTypes.func.isRequired\n}\n\nexport default RemoverTarefas"]},"metadata":{},"sourceType":"module"}