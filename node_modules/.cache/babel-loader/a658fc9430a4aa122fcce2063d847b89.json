{"ast":null,"code":"var _jsxFileName = \"/home/gabriel/new_course_react/gerenciador-de-tarefas-com-react/src/atualizar/atualizar-tarefa.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Form, Jumbotron, Modal } from 'react-bootstrap';\nimport { navigate, A } from 'hookrouter';\n\nconst AtualizarTarefa = () => {\n  const voltar = event => {\n    event.preventDefault();\n    navigate('/');\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, \"Atualizar\"), /*#__PURE__*/React.createElement(Jumbotron, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    noValidate: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 15\n    }\n  }, \"Tarefa\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Digite a tarefa\",\n    minLength: \"5\",\n    maxLength: \"100\",\n    required: true,\n    \"data-testid\": \"txt-tarefa\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 15\n    }\n  }, \"A tarefa deve conter ao menos 5 caracteres\")), /*#__PURE__*/React.createElement(Form.Group, {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"success\",\n    type: \"submit\",\n    \"data-testid\": \"btn-atualizar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 15\n    }\n  }, \"Atualizar\"), \"\\xA0\", /*#__PURE__*/React.createElement(A, {\n    href: \"/\",\n    className: \"btn btn-light\",\n    onClick: voltar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 15\n    }\n  }, \"Voltar\")))));\n};\n\nAtualizarTarefa.propTypes = {\n  id: PropTypes.number.isRequired\n};\nexport default AtualizarTarefa;","map":{"version":3,"sources":["/home/gabriel/new_course_react/gerenciador-de-tarefas-com-react/src/atualizar/atualizar-tarefa.js"],"names":["React","useState","PropTypes","Button","Form","Jumbotron","Modal","navigate","A","AtualizarTarefa","voltar","event","preventDefault","propTypes","id","number","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,SAAvB,EAAkCC,KAAlC,QAA+C,iBAA/C;AACA,SAASC,QAAT,EAAmBC,CAAnB,QAA4B,YAA5B;;AAEA,MAAMC,eAAe,GAAG,MAAM;AAE5B,QAAMC,MAAM,GAAGC,KAAK,IAAI;AACtBA,IAAAA,KAAK,CAACC,cAAN;AACAL,IAAAA,QAAQ,CAAC,GAAD,CAAR;AACD,GAHD;;AAKE,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,UAAU,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,oBAAC,IAAD,CAAM,OAAN;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,iBAFd;AAGE,IAAA,SAAS,EAAC,GAHZ;AAIE,IAAA,SAAS,EAAC,KAJZ;AAKE,IAAA,QAAQ,MALV;AAME,mBAAY,YANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eASE,oBAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,IAAA,IAAI,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDATF,CADF,eAcE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,SAAhB;AAA0B,IAAA,IAAI,EAAC,QAA/B;AAAwC,mBAAY,eAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,uBAKE,oBAAC,CAAD;AAAG,IAAA,IAAI,EAAC,GAAR;AAAY,IAAA,SAAS,EAAC,eAAtB;AAAsC,IAAA,OAAO,EAAEG,MAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,CAdF,CADF,CAFF,CADF;AA+BH,CAtCD;;AAwCAD,eAAe,CAACI,SAAhB,GAA4B;AAC1BC,EAAAA,EAAE,EAAEZ,SAAS,CAACa,MAAV,CAAiBC;AADK,CAA5B;AAIA,eAAeP,eAAf","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { Button, Form, Jumbotron, Modal } from 'react-bootstrap'\nimport { navigate, A } from 'hookrouter'\n\nconst AtualizarTarefa = () => {\n\n  const voltar = event => {\n    event.preventDefault()\n    navigate('/')\n  }\n\n    return (\n      <div>\n        <h3 className=\"text-center\">Atualizar</h3>\n        <Jumbotron>\n          <Form noValidate>\n            <Form.Group>\n              <Form.Label>Tarefa</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Digite a tarefa'\n                minLength='5'\n                maxLength='100'\n                required\n                data-testid='txt-tarefa' />\n              <Form.Control.Feedback type='invalid'>\n                A tarefa deve conter ao menos 5 caracteres\n              </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group className=\"text-center\">\n              <Button variant=\"success\" type=\"submit\" data-testid=\"btn-atualizar\">\n                Atualizar\n              </Button>\n              &nbsp;\n              <A href=\"/\" className=\"btn btn-light\" onClick={voltar}>\n                Voltar\n              </A>\n            </Form.Group>\n          </Form>\n        </Jumbotron>\n      </div>\n    )\n}\n\nAtualizarTarefa.propTypes = {\n  id: PropTypes.number.isRequired\n}\n\nexport default AtualizarTarefa;"]},"metadata":{},"sourceType":"module"}